Session 0: Environment setup

Project: Installing and understanding architecture for docker, kubernetes, jenkins and setting up remote git repo and remote working server in AWS.

Session 1: Creating the Base Image

Project: Students will Dockerize a simple web application, such as a Flask or Node.js app.
They will create a Dockerfile to build the application image and run it as a container.
The project will include steps to test the container locally and ensure it functions as expected.

Session 2: Docker Compose and Multi-Stage Builds

Project: Containerizing a Microservices Architecture
Students will containerize a microservices-based application using Docker Compose.
They will define multiple services for each microservice and set up communication between them.
The project will involve creating a Docker Compose YAML file and running the application locally using Docker Compose.

Session 3: Introduction to Kubernetes

Project: Setting Up a Local Kubernetes Cluster
Students will use the Kubernetes cluster, They will deploy and manage sample application and verify its successful deployment and functioning on the cluster.
The project will focus on understanding the Kubernetes architecture and using kubectl commands for cluster management.

Session 4: Deploying Microservices with Kubernetes

Project: Deploying Microservices on Kubernetes
Students will containerize multiple microservices and create Kubernetes deployment manifests for each service.
They will define a Kubernetes service to enable communication between microservices.
The project will involve deploying the microservices on a Kubernetes cluster and testing their interaction and scalability.

Session 5: Kubernetes Networking and Service Discovery

Project: Implementing Ingress and Load Balancing
Students will configure an Ingress controller and define rules for routing traffic to different microservices.
They will set up load balancing and test the routing of requests between services.
The project will demonstrate how to expose services to the outside world and enable service discovery within the Kubernetes cluster.

Session 6: Monitoring, Logging, and Continuous Deployment

Project: Implementing Monitoring and CI/CD Pipelines
Students will configure monitoring using Prometheus and Grafana to collect and visualize metrics from their Kubernetes cluster.
They will set up a CI/CD pipeline using a tool like GitLab CI/CD to automate the deployment of their application on Kubernetes.
The project will emphasize best practices for logging, monitoring, and continuous deployment in a Kubernetes environment.

Session 7: Debugging Session

Project: We will inject fault into the setup created in last 6 sessions and see what are the best and proper isolation techniques. We will be isolation application issues, container issues, cluster issues and network issues form one another. 